/**
 * Function: Build the GUI for the room scheduler.
 * Author: Aidan Rauscher 
 */
package roomscheduleraidanrauscherajr6536;


import java.sql.Date;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.sql.SQLException;
import java.util.Calendar;
import java.text.SimpleDateFormat;


public class RoomSchedulerGUI extends javax.swing.JDialog {

    /**
     * Creates new form RoomSchedulerGUI
     */
    public RoomSchedulerGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        rebuildFacultyComboBoxes();
        rebuildDateComboBoxes();
        rebuildRoomComboBoxes();
    }
    
////////////////////////////////////////////////////////////////////////////////
    //GETTERS FOR INPUT SOURCES
    private static String getFacultyStatusCombo(){
        return (String)facultyStatusCombo.getSelectedItem();
    }
    
    private static String getFacultyCombo(){
        return (String)facultyCombo.getSelectedItem();
    }
    
    private static Date getDateCombo(){
        return (Date) dateCombo.getSelectedItem(); 
    }
    
    private static Integer getSeats(){
        String seatsNeeded = seats.getText();
        return Integer.parseInt(seatsNeeded);
    }
    
    private static Date getResByDateCombo(){
        return (Date) checkResByDateCombo.getSelectedItem();
    }
    
    private static String getAddRoomName(){
        return (String) addRoomName.getText();
    }
    
    private static int getAddRoomSeats(){
        String seatsNeeded = addRoomSeats.getText();
        return Integer.parseInt(seatsNeeded);
    }
    
    
    private static String getDropRoomCombo(){
        return (String) dropRoomCombo.getSelectedItem();
    }
    

    
    private static String getCancelResFacultyCombo(){
        return (String) cancelResFacultyCombo.getSelectedItem();
    }
    
    private static Date getCancelResDateCombo(){
        return (Date) cancelResDateCombo.getSelectedItem();
    }
    
   
////////////////////////////////////////////////////////////////////////////////
    public void rebuildFacultyComboBoxes()
    {
        facultyCombo.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray())); 
        facultyStatusCombo.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
        cancelResFacultyCombo.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray())); 
    }
    
    public void rebuildDateComboBoxes()
    {
        dateCombo.setModel(new javax.swing.DefaultComboBoxModel(Dates.getDates().toArray()));
        checkResByDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Dates.getDates().toArray()));
        cancelResDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Dates.getDates().toArray()));
    }
    
    public void rebuildRoomComboBoxes(){
        dropRoomCombo.setModel(new javax.swing.DefaultComboBoxModel(RoomQueries.getAllPossibleRoomNames().toArray()));
    }
////////////////////////////////////////////////////////////////////////////////
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Tabs = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        addFacultyButton = new javax.swing.JButton();
        addFacultyTextField = new javax.swing.JTextField();
        addFacultyJLabel = new javax.swing.JLabel();
        facultyStatusButton = new javax.swing.JButton();
        facultyStatusJLabel = new javax.swing.JLabel();
        facultyStatusCombo = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        reservationButton = new javax.swing.JButton();
        facultyCombo = new javax.swing.JComboBox<>();
        dateCombo = new javax.swing.JComboBox<>();
        reservationJLabel = new javax.swing.JLabel();
        reservationByDateButton = new javax.swing.JButton();
        reservationsByDateJLabel = new javax.swing.JLabel();
        seats = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        checkResByDateCombo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        waitlistByDateButton = new javax.swing.JButton();
        waitlistByDateJLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        addDateSpinner = new javax.swing.JSpinner();
        addDateButton = new javax.swing.JButton();
        addDateJLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        addRoomButton = new javax.swing.JButton();
        dropRoomButton = new javax.swing.JButton();
        dropRoomCombo = new javax.swing.JComboBox<>();
        dropRoomJLabel = new javax.swing.JLabel();
        addRoomJLabel = new javax.swing.JLabel();
        addRoomName = new javax.swing.JTextField();
        addRoomSeats = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        cancelResFacultyCombo = new javax.swing.JComboBox<>();
        cancelResDateCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cancelResButton = new javax.swing.JButton();
        cancelResJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("Room Scheduler");

        addFacultyButton.setText("Add Faculty");
        addFacultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyButtonActionPerformed(evt);
            }
        });

        addFacultyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyTextFieldActionPerformed(evt);
            }
        });

        addFacultyJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addFacultyJLabel.setText(" ");

        facultyStatusButton.setText("Check Faculty Status");
        facultyStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyStatusButtonActionPerformed(evt);
            }
        });

        facultyStatusJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        facultyStatusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addFacultyButton)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addFacultyJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(facultyStatusCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(facultyStatusButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(70, 70, 70))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(facultyStatusJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(facultyStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addFacultyButton)
                    .addComponent(facultyStatusButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addFacultyJLabel)
                    .addComponent(facultyStatusJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(174, Short.MAX_VALUE))
        );

        Tabs.addTab("Faculty", jPanel3);

        reservationButton.setText("Make Reservation");
        reservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationButtonActionPerformed(evt);
            }
        });

        facultyCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyComboActionPerformed(evt);
            }
        });

        dateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboActionPerformed(evt);
            }
        });

        reservationJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reservationJLabel.setText("              ");

        reservationByDateButton.setText("Check Reservations By Date");
        reservationByDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationByDateButtonActionPerformed(evt);
            }
        });

        reservationsByDateJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reservationsByDateJLabel.setText("              ");

        seats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatsActionPerformed(evt);
            }
        });

        jLabel3.setText("Faculty:");

        jLabel6.setText("Date:");

        jLabel7.setText("Seats:");

        checkResByDateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel7)
                            .addComponent(reservationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seats, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(facultyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(reservationJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(checkResByDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reservationByDateButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(reservationsByDateJLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(facultyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(checkResByDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(seats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(reservationByDateButton)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(reservationButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reservationJLabel))
                    .addComponent(reservationsByDateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(200, Short.MAX_VALUE))
        );

        Tabs.addTab("Reservation", jPanel5);

        waitlistByDateButton.setText("Check Waitlist");
        waitlistByDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitlistByDateButtonActionPerformed(evt);
            }
        });

        waitlistByDateJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        waitlistByDateJLabel.setText("              ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(waitlistByDateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waitlistByDateButton))
                .addContainerGap(261, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(waitlistByDateButton)
                .addGap(35, 35, 35)
                .addComponent(waitlistByDateJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addGap(131, 131, 131))
        );

        Tabs.addTab("Waitlist", jPanel2);

        addDateSpinner.setModel(new javax.swing.SpinnerDateModel());

        addDateButton.setText("Add Date");
        addDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDateButtonActionPerformed(evt);
            }
        });

        addDateJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(addDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(addDateJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(addDateButton))))
                .addContainerGap(293, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(addDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addDateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addDateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(250, Short.MAX_VALUE))
        );

        Tabs.addTab("Dates", jPanel1);

        addRoomButton.setText("Add Room");
        addRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomButtonActionPerformed(evt);
            }
        });

        dropRoomButton.setText("Drop Room");
        dropRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropRoomButtonActionPerformed(evt);
            }
        });

        dropRoomCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropRoomJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        addRoomJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        addRoomSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomSeatsActionPerformed(evt);
            }
        });

        jLabel2.setText("Room Name:");

        jLabel4.setText("Room Seats");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addRoomSeats, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addRoomButton)
                            .addComponent(addRoomName, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(addRoomJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(dropRoomJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addComponent(dropRoomButton)
                            .addGap(118, 118, 118))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(dropRoomCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRoomSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(dropRoomCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRoomButton)
                    .addComponent(dropRoomButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRoomJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropRoomJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(124, 124, 124))
        );

        Tabs.addTab("Rooms", jPanel4);

        cancelResFacultyCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cancelResDateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Faculty");

        jLabel8.setText("Date");

        cancelResButton.setText("Cancel Reservation");
        cancelResButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelResButtonActionPerformed(evt);
            }
        });

        cancelResJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cancelResDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cancelResButton)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cancelResFacultyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(cancelResJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelResFacultyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelResDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(36, 36, 36)
                .addComponent(cancelResButton)
                .addGap(18, 18, 18)
                .addComponent(cancelResJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(198, Short.MAX_VALUE))
        );

        Tabs.addTab("Drop Reservation", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Tabs)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Tabs)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void facultyComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_facultyComboActionPerformed

    private void addFacultyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFacultyButtonActionPerformed
        // Add the faculty to the faculty table.
        String name = addFacultyTextField.getText();
        Faculty.addFaculty(name);
        addFacultyJLabel.setText(name+" has been added to the Faculty.");
        
        // rebuild the reservation faculty combo box.
        rebuildFacultyComboBoxes();
    }//GEN-LAST:event_addFacultyButtonActionPerformed

    private void dateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateComboActionPerformed

    private void addFacultyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFacultyTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addFacultyTextFieldActionPerformed

    private void seatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatsActionPerformed

    private void reservationByDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationByDateButtonActionPerformed
        ArrayList<ReservationEntry> myRes = ReservationQueries.getReservationsByDate(getResByDateCombo());
        reservationsByDateJLabel.setText("<html>");
        for (int i=0; i<myRes.size(); i++){
           reservationsByDateJLabel.setText(reservationsByDateJLabel.getText() + "<br/>" + "      " + myRes.get(i).getFacultyRes() + "      "+
                  "reserved " + myRes.get(i).getRoomNameRes());
        }
         reservationsByDateJLabel.setText(reservationsByDateJLabel.getText() + "<html>");
       
    }//GEN-LAST:event_reservationByDateButtonActionPerformed

    private void reservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationButtonActionPerformed
        String faculty = getFacultyCombo();
        Date date = getDateCombo();
        int seats = getSeats(); 
        if (ReservationQueries.addReservationEntry(faculty, date, seats)){
            reservationJLabel.setText(getFacultyCombo() + " reserved " + ReservationQueries.getNewestRes(date));
        }
        
        else{
            ArrayList<ReservationEntry> res = ReservationQueries.getReservationsByDate(getDateCombo());
            ArrayList<String> resFaculty = WaitlistQueries.getListOfFacultyNames(res);
            
            ArrayList<WaitlistEntry> wl = WaitlistQueries.getWaitlistByDate(getDateCombo());
            ArrayList<String> wlFaculty = WaitlistQueries.getListOfFacultyNamesWL(wl); 
            
            if (resFaculty.contains(getFacultyCombo())){
                reservationJLabel.setText(getFacultyCombo() + " already has room reserved for " + getDateCombo());
            }
            else if (wlFaculty.contains(getFacultyCombo())){
                reservationJLabel.setText(getFacultyCombo() + " is already on waitlist " + getDateCombo());
            }
                
            else{
            WaitlistQueries.addWaitlistEntry(faculty, date, seats);
            reservationJLabel.setText("Reservation Unavailable. " + getFacultyCombo() + " added to Waitlist.");
            }
        }
    }//GEN-LAST:event_reservationButtonActionPerformed

    private void waitlistByDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitlistByDateButtonActionPerformed
        ArrayList<Date> dates = Dates.getDates();
        waitlistByDateJLabel.setText("<html>");
        for (int m=0;m<dates.size();m++){
        ArrayList<WaitlistEntry> myWL = WaitlistQueries.getWaitlistByDate(dates.get(m));
        for (int i=0; i<myWL.size(); i++){
           String currentDate = myWL.get(i).getDateWL().toString();
           String currentSeats = Integer.toString(myWL.get(i).getRoomSeatsWL());
           waitlistByDateJLabel.setText(waitlistByDateJLabel.getText() + "<br/>" + myWL.get(i).getFacultyWL() + "      " +
                currentDate + "      " + "      " + currentSeats); 
        }
         waitlistByDateJLabel.setText(waitlistByDateJLabel.getText() + "<html>");
        }
    }//GEN-LAST:event_waitlistByDateButtonActionPerformed

    private void addDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDateButtonActionPerformed
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        String spinnerValue = formater.format(addDateSpinner.getValue());
        Date newDate = Date.valueOf(spinnerValue);
        Dates.addDate(newDate); 
        addDateJLabel.setText("Date Added");
        
        rebuildDateComboBoxes();
    }//GEN-LAST:event_addDateButtonActionPerformed

    private void facultyStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyStatusButtonActionPerformed
        ArrayList<String> facultyResRoom= ReservationQueries.getFacultyRoom(getFacultyStatusCombo());
        ArrayList<Date> facultyResDate = ReservationQueries.getFacultyDate(getFacultyStatusCombo());
        ArrayList<String> facultyWLSeats= WaitlistQueries.getFacultyWLSeats(getFacultyStatusCombo());
        ArrayList<String> facultyWLDate = WaitlistQueries.getFacultyWLDate(getFacultyStatusCombo());
        facultyStatusJLabel.setText("<html>");
        for (int i=0; i<facultyResRoom.size(); i++){
            String currentRoom = facultyResRoom.get(i);
            String currentDate = facultyResDate.get(i).toString();
            facultyStatusJLabel.setText(facultyStatusJLabel.getText() + "<br/>" +
                    currentRoom + "    for    " + currentDate + "<html>");
        }
            
        for (int j=0; j<facultyWLSeats.size(); j++){
            String currentSeats = facultyWLSeats.get(j);
            String currentWLDate = facultyWLDate.get(j);
            facultyStatusJLabel.setText(facultyStatusJLabel.getText() + "<br/>" + " Waitlisted  " +
                    currentSeats + "    seats for    " + currentWLDate + "<html>");
            
        }
        
    }//GEN-LAST:event_facultyStatusButtonActionPerformed

    private void cancelResButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelResButtonActionPerformed
        ArrayList<ReservationEntry> todaysRes = ReservationQueries.cancelReservation(getCancelResDateCombo(), getCancelResFacultyCombo()); 
        ArrayList<WaitlistEntry> todaysWL = WaitlistQueries.cancelWaitlist(getCancelResDateCombo(), getCancelResFacultyCombo());
        boolean reservation = false; 
        /*
        if(todaysWL.size()>0){
            for (int k=0; k<todaysWL.size(); k++){
                String currentFaculty = todaysWL.get(k).getFacultyWL(); 
                Date currentDate = getCancelResDateCombo(); 
                int currentSeats = todaysWL.get(k).getRoomSeatsWL();
                WaitlistQueries.addWaitlistEntry(currentFaculty, currentDate, currentSeats);
            }
            cancelResJLabel.setText("Waitlist Cancelled"); 
        }
        */
        
        
            for (int i=0; i<todaysRes.size(); i++){
                String currentFaculty = todaysRes.get(i).getFacultyRes(); 
                Date currentDate = getCancelResDateCombo(); 
                int currentSeats = todaysRes.get(i).getRoomSeatsRes(); 
                ReservationQueries.addReservationEntry(currentFaculty, currentDate, currentSeats);
            }
            
            for (int j=0; j<todaysWL.size(); j++){
                String currentFaculty = todaysWL.get(j).getFacultyWL(); 
                Date currentDate = getCancelResDateCombo(); 
                int currentSeats = todaysWL.get(j).getRoomSeatsWL();
                if (ReservationQueries.addReservationEntry(currentFaculty, currentDate, currentSeats)){
                    }

                else{
                    WaitlistQueries.addWaitlistEntry(currentFaculty, currentDate, currentSeats);
                    }
        
                
            }
            cancelResJLabel.setText(getCancelResFacultyCombo() + " cancelled their reservation/waitlist.");
            /*
            for (int k=0; k<todaysWL.size(); k++){
                String currentFaculty = todaysWL.get(k).getFacultyWL(); 
                Date currentDate = getCancelResDateCombo(); 
                int currentSeats = todaysWL.get(k).getRoomSeatsWL();
                WaitlistQueries.addWaitlistEntry(currentFaculty, currentDate, currentSeats);
                
        }
            cancelResJLabel.setText("Reservation Cancelled"); 
        */
    }//GEN-LAST:event_cancelResButtonActionPerformed

    private void dropRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropRoomButtonActionPerformed

        String roomName = getDropRoomCombo();
        RoomQueries.dropRoom(roomName);
        ArrayList<Date> dates = Dates.getDates(); 
        for (int m=0; m<dates.size(); m++){
            ArrayList<ReservationEntry> todaysRes = ReservationQueries.pullReservation(dates.get(m)); 
            ArrayList<WaitlistEntry> todaysWL = WaitlistQueries.pullWaitlist(dates.get(m));
            for (int i=0; i<todaysRes.size(); i++){
                    String currentFaculty = todaysRes.get(i).getFacultyRes(); 
                    Date currentDate = todaysRes.get(i).getDateRes(); 
                    int currentSeats = todaysRes.get(i).getRoomSeatsRes(); 
                    if (ReservationQueries.addReservationEntry(currentFaculty, currentDate, currentSeats)){
                    }

                    else{
                    WaitlistQueries.addWaitlistEntry(currentFaculty, currentDate, currentSeats);
                    }
                }

            for (int j=0; j<todaysWL.size(); j++){
                String currentFaculty = todaysWL.get(j).getFacultyWL(); 
                Date currentDate = todaysWL.get(j).getDateWL(); 
                int currentSeats = todaysWL.get(j).getRoomSeatsWL();
                if (ReservationQueries.addReservationEntry(currentFaculty, currentDate, currentSeats)){
                    }

                else{
                    WaitlistQueries.addWaitlistEntry(currentFaculty, currentDate, currentSeats);
                }
            }
        }
        dropRoomJLabel.setText("Dropped room " + getDropRoomCombo());
        rebuildRoomComboBoxes();
    }//GEN-LAST:event_dropRoomButtonActionPerformed

    private void addRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomButtonActionPerformed

        String roomName = getAddRoomName();
        int roomSeats = getAddRoomSeats();
        RoomQueries.addRoom(roomName, roomSeats);
        ArrayList<Date> dates = Dates.getDates(); 
        for (int m=0; m<dates.size(); m++){
            ArrayList<ReservationEntry> todaysRes = ReservationQueries.pullReservation(dates.get(m)); 
            ArrayList<WaitlistEntry> todaysWL = WaitlistQueries.pullWaitlist(dates.get(m));
            for (int i=0; i<todaysRes.size(); i++){
                    String currentFaculty = todaysRes.get(i).getFacultyRes(); 
                    Date currentDate = todaysRes.get(i).getDateRes(); 
                    int currentSeats = todaysRes.get(i).getRoomSeatsRes(); 
                    ReservationQueries.addReservationEntry(currentFaculty, currentDate, currentSeats);
                }

            for (int j=0; j<todaysWL.size(); j++){
                String currentFaculty = todaysWL.get(j).getFacultyWL(); 
                Date currentDate = todaysWL.get(j).getDateWL(); 
                int currentSeats = todaysWL.get(j).getRoomSeatsWL();
                if (ReservationQueries.addReservationEntry(currentFaculty, currentDate, currentSeats)){
                    }   
                else{
                    WaitlistQueries.addWaitlistEntry(currentFaculty, currentDate, currentSeats);
                    }

            }
            }
        rebuildRoomComboBoxes();
        String newRoomSeats = Integer.toString(getAddRoomSeats());
        addRoomJLabel.setText("Added room " + getAddRoomName() + " with " + newRoomSeats + " seats");
    }//GEN-LAST:event_addRoomButtonActionPerformed

    private void addRoomSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomSeatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addRoomSeatsActionPerformed
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RoomSchedulerGUI dialog = new RoomSchedulerGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tabs;
    private javax.swing.JButton addDateButton;
    private javax.swing.JLabel addDateJLabel;
    private javax.swing.JSpinner addDateSpinner;
    private javax.swing.JButton addFacultyButton;
    private javax.swing.JLabel addFacultyJLabel;
    private javax.swing.JTextField addFacultyTextField;
    private javax.swing.JButton addRoomButton;
    private javax.swing.JLabel addRoomJLabel;
    private static javax.swing.JTextField addRoomName;
    private static javax.swing.JTextField addRoomSeats;
    private javax.swing.JButton cancelResButton;
    private static javax.swing.JComboBox<String> cancelResDateCombo;
    private static javax.swing.JComboBox<String> cancelResFacultyCombo;
    private javax.swing.JLabel cancelResJLabel;
    private static javax.swing.JComboBox<String> checkResByDateCombo;
    private static javax.swing.JComboBox<String> dateCombo;
    private javax.swing.JButton dropRoomButton;
    private static javax.swing.JComboBox<String> dropRoomCombo;
    private javax.swing.JLabel dropRoomJLabel;
    private static javax.swing.JComboBox<String> facultyCombo;
    private javax.swing.JButton facultyStatusButton;
    private static javax.swing.JComboBox<String> facultyStatusCombo;
    private javax.swing.JLabel facultyStatusJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton reservationButton;
    private javax.swing.JButton reservationByDateButton;
    private javax.swing.JLabel reservationJLabel;
    private javax.swing.JLabel reservationsByDateJLabel;
    private static javax.swing.JTextField seats;
    private javax.swing.JButton waitlistByDateButton;
    private javax.swing.JLabel waitlistByDateJLabel;
    // End of variables declaration//GEN-END:variables



}
